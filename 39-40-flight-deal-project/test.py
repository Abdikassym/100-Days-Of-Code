from datetime import datetime, timedelta
import requests

# file = {'prices': [{'city': 'Paris', 'iataCode': 'PAR', 'lowestPrice': 54, 'id': 2}, {'city': 'Berlin', 'iataCode': 'BER', 'lowestPrice': 42, 'id': 3}, {'city': 'Tokyo', 'iataCode': 'TYO', 'lowestPrice': 485, 'id': 4}, {'city': 'Sydney', 'iataCode': 'SYD', 'lowestPrice': 551, 'id': 5}, {'city': 'Istanbul', 'iataCode': 'IST', 'lowestPrice': 95, 'id': 6}, {'city': 'Kuala Lumpur', 'iataCode': 'KUL', 'lowestPrice': 414, 'id': 7}, {'city': 'New York', 'iataCode': 'NYC', 'lowestPrice': 240, 'id': 8}, {'city': 'San Francisco', 'iataCode': 'SFO', 'lowestPrice': 260, 'id': 9}, {'city': 'Cape Town', 'iataCode': 'CPT', 'lowestPrice': 378, 'id': 10}]}
#
# cities = file["prices"]
#
#
# flights_data = {
#     city['city']: {'price': int(city['lowestPrice']), 'iataCode': city['iataCode']} for city in cities
# }
#
# for city in flights_data.items():
#     print(city[1]['iataCode'])
#
# print(datetime.today().strftime("%d/%m/%Y"))
# print((datetime.today() + timedelta(days=30*6)).strftime("%d/%m/%Y"))
#
flight = {'search_id': 'e879d93e-ad63-116e-e099-c982b7bad965', 'currency': 'EUR', 'fx_rate': 1, 'data': [{'id': '204525c34d6f00006a25f2d9_0|25c322f54d7d0000242c6e6e_0', 'flyFrom': 'SEN', 'flyTo': 'CDG', 'cityFrom': 'London', 'cityCodeFrom': 'LON', 'cityTo': 'Paris', 'cityCodeTo': 'PAR', 'countryFrom': {'code': 'GB', 'name': 'United Kingdom'}, 'countryTo': {'code': 'FR', 'name': 'France'}, 'local_departure': '2024-04-10T11:25:00.000Z', 'utc_departure': '2024-04-10T10:25:00.000Z', 'local_arrival': '2024-04-10T13:40:00.000Z', 'utc_arrival': '2024-04-10T11:40:00.000Z', 'nightsInDest': 14, 'quality': 88.66656, 'distance': 314.09, 'duration': {'departure': 4500, 'return': 3900, 'total': 8400}, 'price': 46, 'conversion': {'EUR': 46}, 'fare': {'adults': 46, 'children': 46, 'infants': 46}, 'fare_locks': {'EUR': [{'default': True, 'duration': 'P3D', 'itinerary_price_limit': 246, 'itinerary_price_remaining': 46, 'fare_lock_kind': 'fee', 'price': 10, 'rule_instance_id': 26748, 'version': 'v1'}, {'default': False, 'duration': 'P1D', 'itinerary_price_limit': 246, 'itinerary_price_remaining': 46, 'fare_lock_kind': 'fee', 'price': 5, 'rule_instance_id': 26749, 'version': 'v1'}]}, 'bags_price': {'1': 110.985, '2': 239.985}, 'baglimit': {'hand_height': 45, 'hand_length': 56, 'hand_weight': 15, 'hand_width': 25, 'hold_dimensions_sum': 275, 'hold_height': 90, 'hold_length': 135, 'hold_weight': 15, 'hold_width': 50, 'personal_item_height': 36, 'personal_item_length': 45, 'personal_item_weight': 15, 'personal_item_width': 20}, 'availability': {'seats': None}, 'airlines': ['U2'], 'route': [{'id': '204525c34d6f00006a25f2d9_0', 'combination_id': '204525c34d6f00006a25f2d9', 'flyFrom': 'SEN', 'flyTo': 'CDG', 'cityFrom': 'London', 'cityCodeFrom': 'LON', 'cityTo': 'Paris', 'cityCodeTo': 'PAR', 'local_departure': '2024-04-10T11:25:00.000Z', 'utc_departure': '2024-04-10T10:25:00.000Z', 'local_arrival': '2024-04-10T13:40:00.000Z', 'utc_arrival': '2024-04-10T11:40:00.000Z', 'airline': 'U2', 'flight_no': 4662, 'operating_carrier': 'EC', 'operating_flight_no': '', 'fare_basis': '', 'fare_category': 'M', 'fare_classes': '', 'return': 0, 'bags_recheck_required': False, 'vi_connection': False, 'guarantee': False, 'equipment': None, 'vehicle_type': 'aircraft'}, {'id': '25c322f54d7d0000242c6e6e_0', 'combination_id': '25c322f54d7d0000242c6e6e', 'flyFrom': 'CDG', 'flyTo': 'LGW', 'cityFrom': 'Paris', 'cityCodeFrom': 'PAR', 'cityTo': 'London', 'cityCodeTo': 'LON', 'local_departure': '2024-04-24T07:20:00.000Z', 'utc_departure': '2024-04-24T05:20:00.000Z', 'local_arrival': '2024-04-24T07:25:00.000Z', 'utc_arrival': '2024-04-24T06:25:00.000Z', 'airline': 'U2', 'flight_no': 8402, 'operating_carrier': 'EC', 'operating_flight_no': '', 'fare_basis': '', 'fare_category': 'M', 'fare_classes': '', 'return': 1, 'bags_recheck_required': False, 'vi_connection': False, 'guarantee': False, 'equipment': None, 'vehicle_type': 'aircraft'}], 'booking_token': 'GaIOvEN5qJPT-zwWu8lByx0wJ5PLPbij38hjtBMpxD5aBj9zhQDArrVtywlAJqLntvZAcF6iqrCMWn6Q8O8amUVz8Ib2vs6mlJGmeULaAdD80aAMP62X1r6WEZZwbu2UtS7JeydZtrVLPQbZiwFsyeSkDtFkvRwaMRIpbDQlWeDmbDM6kxHEgA5_U6-y7xqULvl09adq9VNA1uMHzR3UTwoHFwA09sZTUlljGq1SqueyxBcrJ91WbSIEYYGA-5Os0ebUY-JlJQqwZgmFKzlFhqF0np4YXAa_8LIVfjTvsi5lxCyIOIDQIBLndMyxvU6U-vkS9Qqcp2DWSJZ_wIea7YBCpOEtGAJVhL-9h11IlDEhygGdWTUcD7xWS-iUXVwfOAzjqentoc62x0p-aU1wJHibvpjBKt3DxaZMfhG7Mb-cOPoRBwiP0T1Fg4WvDekifpgW59KjtxRUtqHMxO1eXb6U_9U_xLi8rBZjnY6f03J17v3-JNYZ1hp_gi9ogGeEtRgo1r4cXk3jWNOvO-i6Z2MgOQAsDKQtWLu1hh9MCs4nm_YH26_KH-Atz72qHIWSKICN1g0z9FWZ8fPMplJ1hac2N3PhBIWlDuV_p8XuXiYihZWwN7qj6zKW2hcfXJ3OBcgo62rQXJ18KTH-sgOMmJh4xnGgz_I10kxREpIjaGz4BwmwjI6XhoZdsdpIQAYb2rZkn0zo_N-XoIFLDqSMWK0xbKT_Ew8EF1xwBwFxN6cXPHf50ZhfhPMbP4cDJShCp', 'deep_link': 'https://www.kiwi.com/deep?affilid=pixuflightsearch&currency=EUR&flightsId=204525c34d6f00006a25f2d9_0%7C25c322f54d7d0000242c6e6e_0&from=SEN&lang=en&passengers=1&to=CDG&booking_token=GaIOvEN5qJPT-zwWu8lByx0wJ5PLPbij38hjtBMpxD5aBj9zhQDArrVtywlAJqLntvZAcF6iqrCMWn6Q8O8amUVz8Ib2vs6mlJGmeULaAdD80aAMP62X1r6WEZZwbu2UtS7JeydZtrVLPQbZiwFsyeSkDtFkvRwaMRIpbDQlWeDmbDM6kxHEgA5_U6-y7xqULvl09adq9VNA1uMHzR3UTwoHFwA09sZTUlljGq1SqueyxBcrJ91WbSIEYYGA-5Os0ebUY-JlJQqwZgmFKzlFhqF0np4YXAa_8LIVfjTvsi5lxCyIOIDQIBLndMyxvU6U-vkS9Qqcp2DWSJZ_wIea7YBCpOEtGAJVhL-9h11IlDEhygGdWTUcD7xWS-iUXVwfOAzjqentoc62x0p-aU1wJHibvpjBKt3DxaZMfhG7Mb-cOPoRBwiP0T1Fg4WvDekifpgW59KjtxRUtqHMxO1eXb6U_9U_xLi8rBZjnY6f03J17v3-JNYZ1hp_gi9ogGeEtRgo1r4cXk3jWNOvO-i6Z2MgOQAsDKQtWLu1hh9MCs4nm_YH26_KH-Atz72qHIWSKICN1g0z9FWZ8fPMplJ1hac2N3PhBIWlDuV_p8XuXiYihZWwN7qj6zKW2hcfXJ3OBcgo62rQXJ18KTH-sgOMmJh4xnGgz_I10kxREpIjaGz4BwmwjI6XhoZdsdpIQAYb2rZkn0zo_N-XoIFLDqSMWK0xbKT_Ew8EF1xwBwFxN6cXPHf50ZhfhPMbP4cDJShCp', 'facilitated_booking_available': True, 'pnr_count': 2, 'has_airport_change': False, 'technical_stops': 0, 'throw_away_ticketing': False, 'hidden_city_ticketing': False, 'virtual_interlining': False}], '_results': 30}
price = flight['data'][0]['price']
city_to = flight['data'][0]['cityTo']
date_of_departure = flight['data'][0]['local_departure']
date_of_return = flight['data'][0]['route'][1]['local_departure']
flight_link = flight['data'][0]['deep_link']
print(price)
print(city_to)
print(date_of_departure)
print(date_of_return)
print(flight_link)
